// Generated by view binder compiler. Do not edit!
package com.google.mediapipe.examples.gesturerecognizer.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.ProgressBar;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.swiperefreshlayout.widget.SwipeRefreshLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.mediapipe.examples.gesturerecognizer.R;
import de.hdodenhof.circleimageview.CircleImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityProfileBinding implements ViewBinding {
  @NonNull
  private final SwipeRefreshLayout rootView;

  @NonNull
  public final RelativeLayout RLDob;

  @NonNull
  public final RelativeLayout RLEmail;

  @NonNull
  public final RelativeLayout RLGender;

  @NonNull
  public final RelativeLayout RLImageView;

  @NonNull
  public final RelativeLayout RLMobile;

  @NonNull
  public final RelativeLayout RLName;

  @NonNull
  public final View dividerDob;

  @NonNull
  public final View dividerEmail;

  @NonNull
  public final View dividerGender;

  @NonNull
  public final View dividerName;

  @NonNull
  public final View dividerPhone;

  @NonNull
  public final ImageView icDob;

  @NonNull
  public final ImageView icEmail;

  @NonNull
  public final ImageView icGender;

  @NonNull
  public final ImageView icMobile;

  @NonNull
  public final ImageView icProfile;

  @NonNull
  public final CircleImageView imageViewProfileDp;

  @NonNull
  public final RelativeLayout layoutHead;

  @NonNull
  public final ProgressBar progressBar;

  @NonNull
  public final ProgressBar progressBarProfilePic;

  @NonNull
  public final SwipeRefreshLayout swipeContainer;

  @NonNull
  public final TextView textViewShowDob;

  @NonNull
  public final TextView textViewShowEmail;

  @NonNull
  public final TextView textViewShowFullName;

  @NonNull
  public final TextView textViewShowGender;

  @NonNull
  public final TextView textViewShowMobile;

  @NonNull
  public final TextView textViewShowWelcome;

  private ActivityProfileBinding(@NonNull SwipeRefreshLayout rootView,
      @NonNull RelativeLayout RLDob, @NonNull RelativeLayout RLEmail,
      @NonNull RelativeLayout RLGender, @NonNull RelativeLayout RLImageView,
      @NonNull RelativeLayout RLMobile, @NonNull RelativeLayout RLName, @NonNull View dividerDob,
      @NonNull View dividerEmail, @NonNull View dividerGender, @NonNull View dividerName,
      @NonNull View dividerPhone, @NonNull ImageView icDob, @NonNull ImageView icEmail,
      @NonNull ImageView icGender, @NonNull ImageView icMobile, @NonNull ImageView icProfile,
      @NonNull CircleImageView imageViewProfileDp, @NonNull RelativeLayout layoutHead,
      @NonNull ProgressBar progressBar, @NonNull ProgressBar progressBarProfilePic,
      @NonNull SwipeRefreshLayout swipeContainer, @NonNull TextView textViewShowDob,
      @NonNull TextView textViewShowEmail, @NonNull TextView textViewShowFullName,
      @NonNull TextView textViewShowGender, @NonNull TextView textViewShowMobile,
      @NonNull TextView textViewShowWelcome) {
    this.rootView = rootView;
    this.RLDob = RLDob;
    this.RLEmail = RLEmail;
    this.RLGender = RLGender;
    this.RLImageView = RLImageView;
    this.RLMobile = RLMobile;
    this.RLName = RLName;
    this.dividerDob = dividerDob;
    this.dividerEmail = dividerEmail;
    this.dividerGender = dividerGender;
    this.dividerName = dividerName;
    this.dividerPhone = dividerPhone;
    this.icDob = icDob;
    this.icEmail = icEmail;
    this.icGender = icGender;
    this.icMobile = icMobile;
    this.icProfile = icProfile;
    this.imageViewProfileDp = imageViewProfileDp;
    this.layoutHead = layoutHead;
    this.progressBar = progressBar;
    this.progressBarProfilePic = progressBarProfilePic;
    this.swipeContainer = swipeContainer;
    this.textViewShowDob = textViewShowDob;
    this.textViewShowEmail = textViewShowEmail;
    this.textViewShowFullName = textViewShowFullName;
    this.textViewShowGender = textViewShowGender;
    this.textViewShowMobile = textViewShowMobile;
    this.textViewShowWelcome = textViewShowWelcome;
  }

  @Override
  @NonNull
  public SwipeRefreshLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityProfileBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityProfileBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_profile, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityProfileBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.RL_dob;
      RelativeLayout RLDob = ViewBindings.findChildViewById(rootView, id);
      if (RLDob == null) {
        break missingId;
      }

      id = R.id.RL_email;
      RelativeLayout RLEmail = ViewBindings.findChildViewById(rootView, id);
      if (RLEmail == null) {
        break missingId;
      }

      id = R.id.RL_gender;
      RelativeLayout RLGender = ViewBindings.findChildViewById(rootView, id);
      if (RLGender == null) {
        break missingId;
      }

      id = R.id.RL_imageView;
      RelativeLayout RLImageView = ViewBindings.findChildViewById(rootView, id);
      if (RLImageView == null) {
        break missingId;
      }

      id = R.id.RL_mobile;
      RelativeLayout RLMobile = ViewBindings.findChildViewById(rootView, id);
      if (RLMobile == null) {
        break missingId;
      }

      id = R.id.RL_name;
      RelativeLayout RLName = ViewBindings.findChildViewById(rootView, id);
      if (RLName == null) {
        break missingId;
      }

      id = R.id.divider_dob;
      View dividerDob = ViewBindings.findChildViewById(rootView, id);
      if (dividerDob == null) {
        break missingId;
      }

      id = R.id.divider_email;
      View dividerEmail = ViewBindings.findChildViewById(rootView, id);
      if (dividerEmail == null) {
        break missingId;
      }

      id = R.id.divider_gender;
      View dividerGender = ViewBindings.findChildViewById(rootView, id);
      if (dividerGender == null) {
        break missingId;
      }

      id = R.id.divider_name;
      View dividerName = ViewBindings.findChildViewById(rootView, id);
      if (dividerName == null) {
        break missingId;
      }

      id = R.id.divider_phone;
      View dividerPhone = ViewBindings.findChildViewById(rootView, id);
      if (dividerPhone == null) {
        break missingId;
      }

      id = R.id.ic_dob;
      ImageView icDob = ViewBindings.findChildViewById(rootView, id);
      if (icDob == null) {
        break missingId;
      }

      id = R.id.ic_email;
      ImageView icEmail = ViewBindings.findChildViewById(rootView, id);
      if (icEmail == null) {
        break missingId;
      }

      id = R.id.ic_gender;
      ImageView icGender = ViewBindings.findChildViewById(rootView, id);
      if (icGender == null) {
        break missingId;
      }

      id = R.id.ic_mobile;
      ImageView icMobile = ViewBindings.findChildViewById(rootView, id);
      if (icMobile == null) {
        break missingId;
      }

      id = R.id.ic_profile;
      ImageView icProfile = ViewBindings.findChildViewById(rootView, id);
      if (icProfile == null) {
        break missingId;
      }

      id = R.id.imageView_profile_dp;
      CircleImageView imageViewProfileDp = ViewBindings.findChildViewById(rootView, id);
      if (imageViewProfileDp == null) {
        break missingId;
      }

      id = R.id.layout_head;
      RelativeLayout layoutHead = ViewBindings.findChildViewById(rootView, id);
      if (layoutHead == null) {
        break missingId;
      }

      id = R.id.progress_bar;
      ProgressBar progressBar = ViewBindings.findChildViewById(rootView, id);
      if (progressBar == null) {
        break missingId;
      }

      id = R.id.progress_bar_profile_pic;
      ProgressBar progressBarProfilePic = ViewBindings.findChildViewById(rootView, id);
      if (progressBarProfilePic == null) {
        break missingId;
      }

      SwipeRefreshLayout swipeContainer = (SwipeRefreshLayout) rootView;

      id = R.id.textView_show_dob;
      TextView textViewShowDob = ViewBindings.findChildViewById(rootView, id);
      if (textViewShowDob == null) {
        break missingId;
      }

      id = R.id.textView_show_email;
      TextView textViewShowEmail = ViewBindings.findChildViewById(rootView, id);
      if (textViewShowEmail == null) {
        break missingId;
      }

      id = R.id.textView_show_full_name;
      TextView textViewShowFullName = ViewBindings.findChildViewById(rootView, id);
      if (textViewShowFullName == null) {
        break missingId;
      }

      id = R.id.textView_show_gender;
      TextView textViewShowGender = ViewBindings.findChildViewById(rootView, id);
      if (textViewShowGender == null) {
        break missingId;
      }

      id = R.id.textView_show_mobile;
      TextView textViewShowMobile = ViewBindings.findChildViewById(rootView, id);
      if (textViewShowMobile == null) {
        break missingId;
      }

      id = R.id.textView_show_welcome;
      TextView textViewShowWelcome = ViewBindings.findChildViewById(rootView, id);
      if (textViewShowWelcome == null) {
        break missingId;
      }

      return new ActivityProfileBinding((SwipeRefreshLayout) rootView, RLDob, RLEmail, RLGender,
          RLImageView, RLMobile, RLName, dividerDob, dividerEmail, dividerGender, dividerName,
          dividerPhone, icDob, icEmail, icGender, icMobile, icProfile, imageViewProfileDp,
          layoutHead, progressBar, progressBarProfilePic, swipeContainer, textViewShowDob,
          textViewShowEmail, textViewShowFullName, textViewShowGender, textViewShowMobile,
          textViewShowWelcome);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
